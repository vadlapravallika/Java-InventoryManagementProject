package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import Other.OpenPdf;
import application.Main;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.input.MouseEvent;
import model.Customer;
import model.CustomerDao;
import model.OrderDetails;
import model.ViewOrderDao;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.TableColumn;

public class ViewOrderController implements Initializable{
	@FXML
	private Button btnDash;
	@FXML
	private Button btnCategory;
	@FXML
	private Button btnProduct;
	@FXML
	private Button btnCustomer;
	@FXML
	private Button btnOrder;
	@FXML
	private Button btnViewOrder;
	@FXML
	private TableView<Customer> tCustomer;
	@FXML
	private TableColumn<Customer, Integer> colId;
	@FXML
	private TableColumn<Customer, String> colName;
	@FXML
	private TableColumn<Customer, String> colMbl;
	@FXML
	private TableColumn<Customer, String> colEmail;
	@FXML
	private TableView<OrderDetails> tOrder;
	@FXML
	private TableColumn<OrderDetails, String> colOrderId;
	@FXML
	private TableColumn<OrderDetails, String> colDate;
	@FXML
	private TableColumn<OrderDetails, Integer> colTotalPaid;

	Main m=new Main();
	
	@FXML
    private Button btnLogout;
    
    @FXML
    void onLogoutBtnClick(ActionEvent event) throws IOException {
    	m.changeScene("/view/LoginPage.fxml");

    }

	// Event Listener on Button[#btnDash].onAction
	@FXML
	public void onDashBtnClick(ActionEvent event) throws IOException {
		// TODO Autogenerated
		m.changeScene("/view/Dashboard.fxml");
	}
	// Event Listener on Button[#btnCategory].onAction
	@FXML
	public void onCategoryBtnClick(ActionEvent event) throws IOException {
		// TODO Autogenerated
		m.changeScene("/view/Category.fxml");
	}
	// Event Listener on Button[#btnProduct].onAction
	@FXML
	public void onProductBtnClick(ActionEvent event) throws IOException {
		// TODO Autogenerated
		m.changeScene("/view/Product.fxml");
	}
	// Event Listener on Button[#btnCustomer].onAction
	@FXML
	public void onCustomerBtnClick(ActionEvent event) throws IOException {
		// TODO Autogenerated
		m.changeScene("/view/Customer.fxml");
	}
	// Event Listener on Button[#btnOrder].onAction
	@FXML
	public void onOrderBtnClick(ActionEvent event) throws IOException {
		// TODO Autogenerated
		m.changeScene("/view/Order.fxml");
	}
	// Event Listener on Button[#btnViewOrder].onAction
	@FXML
	public void onViewOrderBtnClick(ActionEvent event) throws IOException {
		// TODO Autogenerated
		m.changeScene("/view/ViewOrder.fxml");
	}

	// Event Listener on TableView[#tCategory].onMouseClicked
	@FXML
	public void handleOnMouseclick(MouseEvent event) {
		// TODO Autogenerated
		
		Customer customer=tCustomer.getSelectionModel().getSelectedItem();
		ViewOrderDao dao=new ViewOrderDao();
		ObservableList<OrderDetails> list = dao.getOrdersList(customer.getId());
		colOrderId.setCellValueFactory(new PropertyValueFactory<OrderDetails, String>("orderId"));
		colDate.setCellValueFactory(new PropertyValueFactory<OrderDetails, String>("orderDate"));
		colTotalPaid.setCellValueFactory(new PropertyValueFactory<OrderDetails, Integer>("totalPaid"));
		tOrder.setItems(list);
		
	}
	// Event Listener on TableView[#tOrder].onMouseClicked
	@FXML
	public void handleMouseClickOnOrder(MouseEvent event) {
		// TODO Autogenerated
		OrderDetails od=tOrder.getSelectionModel().getSelectedItem();
		OpenPdf.openById(od.getOrderId());
	}
	@Override
	public void initialize(URL url, ResourceBundle rb) {
		showCustomers();
	
	}
	public void showCustomers() {
		// TODO Auto-generated method stub
		CustomerDao dao=new CustomerDao();
		ObservableList<Customer> list= dao.getCustomerList();
		colId.setCellValueFactory(new PropertyValueFactory<Customer, Integer>("id"));
		colName.setCellValueFactory(new PropertyValueFactory<Customer, String>("name"));
		colMbl.setCellValueFactory(new PropertyValueFactory<Customer, String>("mobile"));
		colEmail.setCellValueFactory(new PropertyValueFactory<Customer, String>("email"));
		tCustomer.setItems(list);
		
	}
}
